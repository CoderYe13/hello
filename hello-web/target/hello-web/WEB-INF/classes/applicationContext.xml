<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd ">

    <!--     启用扫描机制，并指定扫描对应的包。该元素默认启动-->
    <context:annotation-config/>
    <context:component-scan base-package="com.henu" annotation-config="true">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--    &lt;!&ndash;扫描软编码文件&ndash;&gt;-->
    <!--    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>-->
    <bean id="placeholderConfigurer"
          class="com.henu.web.util.EncryptPropertyPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>classpath*:db.properties</value>
                <value>classpath*:hello.properties</value>
            </array>
        </property>
        <property name="fileEncoding" value="UTF-8"></property>
    </bean>

    <!--配置dataSource-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driverClassName}"></property>
        <property name="url" value="${db.url}"></property>
        <property name="username" value="${db.username}"></property>
        <property name="password" value="${db.password}"></property>
    </bean>
    <!-- 集成MyBatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
        <!--mybatis系统配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <!-- 采用自动扫描方式创建mapper bean -->
    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.henu.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 事务管理器配置 -->
    <!--
        1：配置事务管理器transactionManager不同的orm选择不同的TransactionManager
    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--
        2：开启基于注解的事务控制模式
        3：在代码中给需要的方法添加事务@Transactional注解
    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>